name: Cherry pick staging PRs merged into main

on:
  pull_request:
    types:
      - closed
    branches:
      - 'main'


jobs:
  create-pr-for-staging:
    if: |
      github.event.pull_request.merged == true &&
      contains(github.event.pull_request.labels.*.name, 'staging')
    name: Create PR against staging branch
    runs-on: ubuntu-latest

    steps:
      - name: DEBUG
        run: |
          echo "${{ toJson(github) }}"

      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Determine latest staging branch
        id: get-staging-branch
        run: |
          set -x
          git log --oneline --decorate --graph --all
          branch=$(git ls-remote --heads origin 'staging*' | tail -1 | awk 'gsub(".*refs/heads/","")')
          #git fetch origin $branch
          #git checkout $branch
          echo "branch=$branch" > $GITHUB_OUTPUT

      - name: Set git credentials
        run: |
          git config --global user.name openslides-automation
          git config --global user.email openslides-automation@users.noreply.github.com

      - name: Generate access token
        uses: tibdex/github-app-token@v2
        id: generate-token
        with:
          app_id: ${{ secrets.AUTOMATION_APP_ID }}
          private_key: ${{ secrets.AUTOMATION_APP_PRIVATE_KEY }}

      - name: Cherry-pick new commit
        uses: carloscastrojumo/github-cherry-pick-action@v1.0.1
        with:
          token: ${{ steps.generate-token.outputs.token }}
          branch: ${{ steps.get-staging-branch.outputs.branch }}
          labels: staging-port
          title: '[cherry-pick] {old_title}'
          body: 'Cherry picking #{old_pull_request_id} onto this branch'
          reviewers: ${{ github.event.pull_request.user.username }}
          assignees: ${{ github.event.pull_request.user.username }}

#      - name: Create or update PR
#        uses: peter-evans/create-pull-request@v6
#        with:
#          token: ${{ steps.generate-token.outputs.token }}
#          branch: apply/commit-${{ github.sha }}
#          delete-branch: true
#          title: "Stage: ${{ github.event.pull_request.title }}"
#          body: "Triggered by commit [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})\n\n${{ steps.cherry-pick.outputs.error && 'There were conflicts during the cherry-pick. These were commited without any resolving. Please resolve them manually and push the result to this branch before merging.' || 'The cherry-pick was successful without any conflicts. You should be able to simply merge this PR.' }}"
#          reviewers: ${{ github.event.pull_request.user.username }}
#          assignees: ${{ github.event.pull_request.user.username }}
#          labels: staging-port
#          #milestone: 4 # TODO: PUT BACK IN
